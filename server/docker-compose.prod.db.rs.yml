# production mode
version: '3.5'
services:
  mongo-primary:
    container_name: mongo-primary
    image: mongo:4.0.6
    volumes:
      - ${DBDATA:-../mongo}/.dockerMongoRepl/primary/data/db:/data/db
      - ${DBDATA:-../mongo}/.dockerMongoRepl/keyfile:/data/keyfile
      - ./db/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
    networks:
      - candilib-network
    ports:
      - 27017:27017
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_ROOT_PASS:-changeme}
      MONGO_INITDB_DATABASE: ${DB_NAME:-candilib}
      DB_USER: ${DB_USER:-adminCandilib}
      DB_PASS: ${DB_PASS:-changeme78}
    command: --bind_ip_all --auth --keyFile /data/keyfile/mongo-cluster-key --replSet rs0 --enableMajorityReadConcern false
  mongo-secondary:
    container_name: mongo-secondary
    image: mongo:4.0.6
    volumes:
      - ${DBDATA:-../mongo}/.dockerMongoRepl/secondary/data/db:/data/db
      - ${DBDATA:-../mongo}/.dockerMongoRepl/keyfile:/data/keyfile
    networks:
      - candilib-network
    depends_on:
      - mongo-primary
    ports:
      - 27018:27017
    restart: always
    command: --bind_ip_all -auth --keyFile /data/keyfile/mongo-cluster-key --replSet rs0 --enableMajorityReadConcern false
  mongo-arbiter:
    container_name: mongo-arbiter
    image: mongo:4.0.6
    volumes:
      - ${DBDATA:-../mongo}/.dockerMongoRepl/arbiter/data/arb:/data/arb
      - ${DBDATA:-../mongo}/.dockerMongoRepl/keyfile:/data/keyfile
    networks:
      - candilib-network
    depends_on:
      - mongo-primary
    ports:
      - 27019:27017
    restart: always
    command: --bind_ip_all --auth --keyFile /data/keyfile/mongo-cluster-key --replSet rs0 --enableMajorityReadConcern false
networks:
  default:
    external:
      name: ${APP}-network
